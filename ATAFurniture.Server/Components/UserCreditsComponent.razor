@using Kroiko.Domain
@using ATAFurniture.Server.DataAccess
@implements IDisposable

<RadzenCard>
    <RadzenRow AlignItems="AlignItems.Center">
        <RadzenLabel Text="Налични кредити: "/><RadzenLabel Text="@UserContextService.User.CreditsCount.ToString()"></RadzenLabel>
        @if (UserContextService.User.CreditsCount <= 0)
        {
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenButton Text="Добави кредити"
                              Icon="add_circle_outline"
                              ButtonStyle="ButtonStyle.Secondary"
                              Click="OnAddCreditsButtonPress"/>
            </RadzenColumn>
        }
    </RadzenRow>
</RadzenCard>

@code {
    [Parameter] public UserContextService UserContextService { get; set; }

    protected override void OnInitialized()
    {
        UserContextService.User.PropertyChanged -= OnUserPropertyChanged;
        UserContextService.User.PropertyChanged += OnUserPropertyChanged;
    }

    private void OnUserPropertyChanged(object sender, PropertyChangedEventArgs e)
    {
        if (e.PropertyName == nameof(User.CreditsCount))
        {
            StateHasChanged();
        }
    }

    private async Task OnAddCreditsButtonPress(MouseEventArgs obj)
    {
        // trigger the payment flow
        // move this to the webhook the flow will call
        await UserContextService.AddCredits(10, true);
    }

    public void Dispose()
    {
        UserContextService.User.PropertyChanged -= OnUserPropertyChanged;
    }
}