@page "/converter"
@attribute [Authorize]

@using ATAFurniture.Server.Models
@using ATAFurniture.Server.DataAccess
@using ATAFurniture.Server.Components.FileDisplay

@if(_isUserContextReady)
{
    <RadzenStack Gap="1em">
        <UserCreditsComponent UserContextService="@UserContextService"/>
        <TargetCompanySelectionComponent UserContextService="@UserContextService" Context="@Context"/>
        <FileUploadComponent UserContextService="@UserContextService" Context="@Context"/>
    
        @if (Context.Details.Any())
        {
            <FileDisplayComponent Context="@Context"/>
        }

        @if (Context.Files.Any())
        {
            <OrderHandlingComponent UserContextService="@UserContextService"  Context="@Context"/>
        }
    </RadzenStack>
}
else
{
    <RadzenProgressBarCircular ShowValue="true" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large">
        <Template><h6>Working</h6></Template>
    </RadzenProgressBarCircular>
}

@code {
    [Inject] UserContextService UserContextService { get; set; }
    private ConverterContext Context { get; set; } = new();
    
    private bool _isUserContextReady = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) 
        {
            await UserContextService.ExtractUserIdentity();
            var lastSelection = UserContextService.User!.LastSelectedCompany;
            Context.TargetCompany = lastSelection ?? await UserContextService.GetPreviouslySelectedTargetCompanyAsync();

            Context.ContactInfo.CompanyName = UserContextService.User.CompanyName;
            Context.ContactInfo.MobileNumber = UserContextService.User.MobileNumber;
            Context.ContactInfo.Email = UserContextService.User.Email;
        
            Context.PropertyChanged += OnContextPropertyChanged;
            _isUserContextReady = true;
            StateHasChanged();
        }
    }

    private void OnContextPropertyChanged(object sender, PropertyChangedEventArgs e)
    {
        if (e.PropertyName is nameof(ConverterContext.Details) or nameof(ConverterContext.Files))
        {
            StateHasChanged();
        }
    }

}