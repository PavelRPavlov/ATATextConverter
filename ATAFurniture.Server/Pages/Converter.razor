@page "/converter"
@attribute [Authorize]

@using ATAFurniture.Server.Models
@using Kroiko.Domain

<PageTitle>Converter</PageTitle>

<CascadingValue TValue="ConverterContext" Value="@Context">
    <RadzenStack Gap="1em">
        <TargetCompanySelectionComponent/>
        @if (Context.TargetCompany != null)
        {
            <MissingAccountInfo/>

            <UserCreditsComponent/>
            
            <FileUploadComponent/>

            <FileDisplayComponent />
        }
    </RadzenStack>
</CascadingValue>

@code {
    [Inject] UserContextService UserContextService { get; set; }
    private ConverterContext Context { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var lastSelection = UserContextService.User.LastSelectedCompany;
        Context.TargetCompany = lastSelection ?? await UserContextService.GetPreviouslySelectedTargetCompanyAsync();
    }
}